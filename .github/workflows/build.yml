name: build-and-deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  detect-changes:
    name: Detect Changes in Services
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-output.outputs.services }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Detect Changed Services
        id: detect
        run: |
          # Get the file paths with `git diff`
          git_diff_output=$(git diff --name-only HEAD^ HEAD)
          echo "Git diff output: $git_diff_output"

          # Filter for changes under the 'services' directory
          services=$(echo "$git_diff_output" | grep '^services/' || true)
          echo "Filtered services: $services"

          # Extract the service names (directory names under 'services')
          services_list=$(echo "$services" | cut -d'/' -f2 | sort | uniq)
          echo "Services list: $services_list"

          # Check if any services were found
          if [ -z "$services_list" ]; then
            echo "[]" > services.json
          else
            # Format the services list into a JSON array
            echo "[\"$(echo "$services_list" | sed ':a;N;$!ba;s/\n/","/g')\"]" > services.json
          fi

          # Output the final list of services detected
          echo "Services detected:"
          cat services.json
        shell: bash
      
      - name: Set Output for Services
        id: set-output
        run: echo "services=$(cat services.json)" >> $GITHUB_OUTPUT

  build-and-push:
    name: Build and push Docker images
    needs: detect-changes
    runs-on: 
      - ubuntu-latest
    if: ${{ needs.detect-changes.outputs.services != '[]' }}
    
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    #continue-on-error: false

    steps:
      - name: checking services
        run: |
          echo ${{ needs.detect-changes.outputs.services }}

      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Log in to Dockerhub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        working-directory: services/${{ matrix.service }}
        run: |
          docker build -t yuvalrabo/${{ matrix.service }}:${{ github.sha }} .
          docker tag yuvalrabo/${{ matrix.service }}:${{ github.sha }} yuvalrabo/${{ matrix.service }}:latest
          docker push yuvalrabo/${{ matrix.service }}:${{ github.sha }}
          docker push yuvalrabo/${{ matrix.service }}:latest    

  deploy:
    name: Deploy changes to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Login to terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::329599656414:role/gh-actions-role
        


